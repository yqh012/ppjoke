plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion(Version.compileSdkVersion)
    buildToolsVersion(Version.buildToolsVersion)

    defaultConfig {
        minSdkVersion(Version.minSdkVersion)
        targetSdkVersion(Version.targetSdkVersion)
        versionCode(Version.versionCode)
        versionName(Version.versionName)

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api(Kotlin.kotlinStdlib)
    api(Android.coreKtx)
    api(Android.appcompat)
    api(Android.material)
    api(Android.constraintlayout)
    api(Kotlin.kotlinReflect)
    api(Kotlin.coroutinesAndroid)
    api(Kotlin.coroutinesCore)
    api(Kotlin.coroutinesJdk)
    api(Android.lifecycle.liveDataKtx)
    api(Android.lifecycle.viewModelKtx)
    api(Android.lifecycle.lifecycleRuntime)
    api(Android.lifecycle.viewModelSavestate)
    api(Android.lifecycle.process)
    api(Android.room.roomRuntime)
    api(Android.room.roomKtx)
    api(Android.navigation.fragmentKtx)
    api(Android.navigation.uiKtx)
    api(ThirdParty.gson.gson)
    api(ThirdParty.moshi.moshi)
}